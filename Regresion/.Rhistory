datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$Miembros <- as.numeric(datos$Miembros)
datos$SexoMayor <- as.factor(datos$SexoMayor)
datos$ActMayor <- as.factor(datos$ActMayor)
str(datos)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
datos <- datos[,c(-1, -6, -11, -13)]
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$TVColor <- as.factor(datos$TVColor)
datos$Ordenador <- as.factor(datos$Ordenador)
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$Miembros <- as.numeric(datos$Miembros)
datos$SexoMayor <- as.factor(datos$SexoMayor)
str(datos)
datos$ActMayor <- as.factor(datos$ActMayor)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
datos <- datos[,c(-1, -11, -13)]
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$TVColor <- as.factor(datos$TVColor)
datos$Ordenador <- as.factor(datos$Ordenador)
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$SexoMayor <- as.factor(datos$SexoMayor)
datos$Miembros <- as.numeric(datos$Miembros)
datos$ActMayor <- as.factor(datos$ActMayor)
str(datos)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
datos <- datos[,c(-1, -6, -11, -13, -16)]
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$TVColor <- as.factor(datos$TVColor)
datos$Ordenador <- as.factor(datos$Ordenador)
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$Miembros <- as.numeric(datos$Miembros)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$SexoMayor <- as.factor(datos$SexoMayor)
datos$ActMayor <- as.factor(datos$ActMayor)
str(datos)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
datos <- datos[,c(-1, -6, -11, -13, -3)]
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$TVColor <- as.factor(datos$TVColor)
datos$Ordenador <- as.factor(datos$Ordenador)
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$Miembros <- as.numeric(datos$Miembros)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$ActMayor <- as.factor(datos$ActMayor)
str(datos)
datos$SexoMayor <- as.factor(datos$SexoMayor)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
#Now the results are consistent, and no longer dependent
#on their level of aggregation (tabulation). I have notified the maintainer of the pscl package. Maybe he has some interest.
pR2(modelo01, 4)
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
summary(modelo01)
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
datos <- datos[,c(-1, -6, -11, -13, -3)]
ruta <- 'datos.xlsx'
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
datos <- datos[,c(-1, -6, -11, -13, -3)]
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$TVColor <- as.factor(datos$TVColor)
datos$Ordenador <- as.factor(datos$Ordenador)
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$Miembros <- as.numeric(datos$Miembros)
datos$ActMayor <- as.factor(datos$ActMayor)
datos$SexoMayor <- as.factor(datos$SexoMayor)
str(datos)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
source('C:/Users/frank/OneDrive/CUNEF - MDS/Técnicas de Clasificación/Regresion/Regresion.R', echo=TRUE)
anova(modelo01, test = "Chisq")
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
summary(modelo01)
training.data.raw <- read.csv('C:/Users/frank/OneDrive/CUNEF - MDS/Técnicas de Clasificación/titanic.csv',header=T,na.strings=c(""))
str(training.data.raw)
sapply(training.data.raw,function(x) sum(is.na(x)))
sapply(training.data.raw, function(x) length(unique(x)))
data <- subset(training.data.raw,select=c(2,3,5,6,7,8,10,12))
data$Age[is.na(data$Age)] <- mean(data$Age,na.rm=T)
is.factor(data$Sex)
is.factor(data$Embarked)
contrasts(data$Sex)
contrasts(data$Embarked)
data <- data[!is.na(data$Embarked),]
rownames(data) <- NULL
train <- data[1:800,]
test <- data[801:889,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)
training.data.raw <- read.csv('C:/Users/frank/OneDrive/CUNEF - MDS/Técnicas de Clasificación/titanic.csv',header=T,na.strings=c(""))
str(training.data.raw)
ruta <- 'datos.xlsx'
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
datos <- datos[,c(-1, -6, -11, -13, -3, -17)]
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$TVColor <- as.factor(datos$TVColor)
datos$Ordenador <- as.factor(datos$Ordenador)
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$Miembros <- as.numeric(datos$Miembros)
datos$SexoMayor <- as.factor(datos$SexoMayor)
datos$ActMayor <- as.factor(datos$ActMayor)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
print(paste('Accuracy',1-misClasificError))
logit.perf
size <- floor(nrow(datos) * 0.8)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
summary(modelo01)
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
datos <- datos[,c(-1, -6, -11, -13, -3, -17)]
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$TVColor <- as.factor(datos$TVColor)
datos$Ordenador <- as.factor(datos$Ordenador)
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$Miembros <- as.numeric(datos$Miembros)
datos$SexoMayor <- as.factor(datos$SexoMayor)
datos$ActMayor <- as.factor(datos$ActMayor)
str(datos)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.8)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
anova(modelo01, test = "Chisq")
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
size <- floor(nrow(datos) * 0.88)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
test.set <- datos[-train_ind, ]
summary(modelo01)
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
#Now the results are consistent, and no longer dependent
#on their level of aggregation (tabulation). I have notified the maintainer of the pscl package. Maybe he has some interest.
pR2(modelo01, 4)
str(test.set)
str(training.set)
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.68, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
size <- floor(nrow(datos) * 0.6)
set.seed(123)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
train_ind <- sample(seq_len(nrow(datos)), size = size)
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.68, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.6, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn = c("Actual", "Predicted"))
logit.perf
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn = c("Actual", "Predicted"))
logit.perf
ruta <- 'datos.xlsx'
datos <- read_xlsx(ruta)
colnames(datos) <- c('Hogar','AyudaFamilias','RentaMenos16','VacacionesOutdoor',
'CapacidadAfrontar', 'TVColor', 'Ordenador','LlegarFinMes', 'RegimenTenencia',
'Miembros','RentaTotalAnterior',
'HogarPobreza', 'Region', 'EdadMayor', 'HorasSemanales', 'Mayores16','SexoMayor','ActMayor')
#Quitamos la columna de Renta pues incurririamos en un problema circular como usted bien ha explicado
datos <- datos[,c(-1, -6, -11, -13, -3, -17)]
datos$HogarPobreza <- as.factor(as.character(datos$HogarPobreza))
datos$VacacionesOutdoor <- as.factor(datos$VacacionesOutdoor)
datos$CapacidadAfrontar <- as.factor(datos$CapacidadAfrontar)
datos$TVColor <- as.factor(datos$TVColor)
datos$Ordenador <- as.factor(datos$Ordenador)
datos$LlegarFinMes <- as.factor(datos$LlegarFinMes)
datos$RegimenTenencia <- as.factor(datos$RegimenTenencia)
datos$Miembros <- as.numeric(datos$Miembros)
datos$SexoMayor <- as.factor(datos$SexoMayor)
datos$ActMayor <- as.factor(datos$ActMayor)
str(datos)
datos <- as.data.frame(datos)
#### Modelo de Regresion Linar #####
str(datos)
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.6, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn = c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn = c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.68, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn = c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
size <- floor(nrow(datos) * 0.8)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
#Now the results are consistent, and no longer dependent
#on their level of aggregation (tabulation). I have notified the maintainer of the pscl package. Maybe he has some interest.
pR2(modelo01, 4)
str(test.set)
str(training.set)
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.68, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn = c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
size <- floor(nrow(datos) * 0.88)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.68, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn = c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
size <- floor(nrow(datos) * 0.84)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
str(test.set)
str(training.set)
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.68, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn = c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
size <- floor(nrow(datos) * 0.6)
set.seed(123)
train_ind <- sample(seq_len(nrow(datos)), size = size)
training.set <- datos[train_ind, ]
test.set <- datos[-train_ind, ]
modelo01 <- glm(HogarPobreza ~ ., family = 'binomial'(link = 'logit'), data = training.set)
summary(modelo01)
exp(coef(modelo01))
anova(modelo01, test = "Chisq")
#Now the results are consistent, and no longer dependent
#on their level of aggregation (tabulation). I have notified the maintainer of the pscl package. Maybe he has some interest.
pR2(modelo01, 4)
str(test.set)
str(training.set)
fitted.results <- predict(modelo01, newdata = test.set, type = 'response')
fitted.results <- ifelse(fitted.results > 0.68, 1,0)
logit.perf <- table(test.set$HogarPobreza, fitted.results, dnn = c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test.set$HogarPobreza)
print(paste('Accuracy',1-misClasificError))
training.data.raw <- read.csv('C:/Users/frank/OneDrive/CUNEF - MDS/Técnicas de Clasificación/titanic.csv',header=T,na.strings=c(""))
sapply(training.data.raw,function(x) sum(is.na(x)))
sapply(training.data.raw, function(x) length(unique(x)))
data <- subset(training.data.raw,select=c(2,3,5,6,7,8,10,12))
data$Age[is.na(data$Age)] <- mean(data$Age,na.rm=T)
is.factor(data$Sex)
is.factor(data$Embarked)
data <- data[!is.na(data$Embarked),]
train <- data[1:800,]
test <- data[801:889,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf <- table(test$Survived, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
train <- data[1:600,]
test <- data[601:889,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
logit.perf <- table(test$Survived, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.68,1,0)
logit.perf <- table(test$Survived, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
train <- data[1:510,]
test <- data[511:889,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.68,1,0)
logit.perf <- table(test$Survived, fitted.results, dnn=c("Actual", "Predicted"))
logit.perf
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
